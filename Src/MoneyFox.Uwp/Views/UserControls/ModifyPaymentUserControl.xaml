<UserControl
    x:Class="MoneyFox.Uwp.Views.UserControls.ModifyPaymentUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:converter="using:MoneyFox.Uwp.Converter"
    xmlns:designTime="using:MoneyFox.Presentation.ViewModels.DesignTime"
    xmlns:resources="using:MoneyFox.Application.Resources"
    xmlns:controls="using:MoneyFox.Uwp.Views.Controls"
    xmlns:viewModels="using:MoneyFox.Presentation.ViewModels"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <d:Page.DataContext>
        <designTime:DesignTimeModifyPaymentViewModel />
    </d:Page.DataContext>

    <UserControl.Resources>
        <converter:AmountFormatConverter x:Key="AmountConverter" />
        <converter:DateTimeToDateTimeOffsetConverter x:Key="DateTimeToDateTimeOffsetConverter" />
        <converter:BooleanToVisibilityConverter x:Key="BooleanVisibilityConverter" />
        <converter:NativeRecurrenceTypeConverter x:Key="RecurrenceTypeConverter" />
        <converter:DecimalConverter x:Key="DecimalConverter" />

        <DataTemplate x:Key="ComboBoxAccountTemplate" x:DataType="viewModels:AccountViewModel">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{x:Bind Name}" />
                <TextBlock Text=" (" />
                <TextBlock Text="{x:Bind CurrentBalance, Converter={StaticResource AmountConverter}}" />
                <TextBlock Text=")" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ComboBoxRecurrenceTemplate">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Converter={StaticResource RecurrenceTypeConverter}}" />
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <ComboBox Margin="{StaticResource SmallTitleContentMargin}"
                          HorizontalAlignment="Stretch"
                          Header="{Binding AccountHeader}"
                          ItemTemplate="{StaticResource ComboBoxAccountTemplate}"
                          ItemsSource="{Binding ChargedAccounts,
                                                    Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedPayment.ChargedAccount,
                                                     Mode=TwoWay,
                                                     UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="SelectionChanged">
                            <core:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ComboBox>

                <ComboBox Margin="{StaticResource SmallTitleContentMargin}"
                          HorizontalAlignment="Stretch"
                          Header="{x:Bind resources:Strings.TargetAccountLabel}"
                          ItemTemplate="{StaticResource ComboBoxAccountTemplate}"
                          ItemsSource="{Binding TargetAccounts,
                                                    Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedPayment.TargetAccount,
                                                     Mode=TwoWay,
                                                     UpdateSourceTrigger=PropertyChanged}"
                          Visibility="{Binding SelectedPayment.IsTransfer,
                                                   Converter={StaticResource BooleanVisibilityConverter}}">
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="SelectionChanged">
                            <core:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>

                </ComboBox>
                <TextBox Margin="{StaticResource SmallTitleContentMargin}"
                         Header="{x:Bind resources:Strings.AmountLabel}"
                         InputScope="Number"
                         Text="{Binding SelectedPayment.Amount,
                                            Mode=TwoWay,
                                            UpdateSourceTrigger=PropertyChanged,
                                            Converter={StaticResource DecimalConverter}}"
                         TextAlignment="Right" />

                <controls:CategorySelectionControl />

                <DatePicker Margin="{StaticResource SmallTitleContentMargin}"
                            HorizontalAlignment="Left"
                            Date="{Binding SelectedPayment.Date,
                                               Converter={StaticResource DateTimeToDateTimeOffsetConverter},
                                               Mode=TwoWay,
                                               UpdateSourceTrigger=PropertyChanged}"
                            Header="{x:Bind resources:Strings.DateLabel}" />
                <TextBox Margin="{StaticResource SmallTitleContentMargin}"
                         Header="{x:Bind resources:Strings.NoteLabel}"
                         Text="{Binding SelectedPayment.Note,
                                            Mode=TwoWay,
                                            UpdateSourceTrigger=PropertyChanged}"
                         TextWrapping="Wrap" />
                <!--  We set the binding as OneTime and update the value in the code behind to ensure that it is visible when the animation plays  -->
                <ToggleSwitch Margin="{StaticResource SmallTitleContentMargin}"
                              VerticalAlignment="Stretch"
                              Header="{x:Bind resources:Strings.RecurringLabel}"
                              IsOn="{Binding SelectedPayment.IsRecurring,
                                                 Mode=TwoWay}"
                              Toggled="ToggleRecurringVisibility" />
                <StackPanel x:Name="RecurringStackPanel" Loaded="SetVisibilityInitialy">
                    <ComboBox HorizontalAlignment="Stretch"
                              Margin="{StaticResource SmallTitleContentMargin}"
                              Header="{x:Bind resources:Strings.RecurrenceLabel}"
                              ItemTemplate="{StaticResource ComboBoxRecurrenceTemplate}"
                              ItemsSource="{Binding RecurrenceList}"
                              SelectedItem="{Binding SelectedPayment.RecurringPayment.Recurrence,
                                                         Mode=TwoWay,
                                                         UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Content="{x:Bind resources:Strings.EndlessLabel}"
                              Margin="{StaticResource SmallTitleContentMargin}"
                              IsChecked="{Binding SelectedPayment.RecurringPayment.IsEndless,
                                                      Mode=TwoWay,
                                                      UpdateSourceTrigger=PropertyChanged}" />
                    <DatePicker Margin="{StaticResource SmallTitleContentMargin}"
                                Date="{Binding SelectedPayment.RecurringPayment.EndDate,
                                                   Converter={StaticResource DateTimeToDateTimeOffsetConverter},
                                                   Mode=TwoWay,
                                                   UpdateSourceTrigger=PropertyChanged}"
                                Header="{x:Bind resources:Strings.EnddateLabel}"
                                Visibility="{Binding SelectedPayment.RecurringPayment.IsEndless,
                                                         Converter={StaticResource BooleanVisibilityConverter},
                                                         ConverterParameter=revert}" />
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
    </Grid>

</UserControl>