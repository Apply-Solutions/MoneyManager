<views:BaseView
    x:Class="MoneyFox.Uwp.Views.AccountListView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:MoneyFox.Uwp.Views.UserControls"
    xmlns:converter="using:MoneyFox.Uwp.Converter"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:designTime="using:MoneyFox.Uwp.ViewModels.DesignTime"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:resources="using:MoneyFox.Application.Resources"
    xmlns:uwpToolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:viewModels="using:MoneyFox.Uwp.ViewModels"
    xmlns:views="using:MoneyFox.Uwp.Views"
    DataContext="{Binding AccountListVm, Source={StaticResource Locator}}"
    mc:Ignorable="d">

    <d:MvxWindowsPage.DataContext>
        <designTime:DesignTimeAccountListViewModel />
    </d:MvxWindowsPage.DataContext>

    <i:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{Binding LoadDataCommand}" />
        </core:EventTriggerBehavior>
    </i:Interaction.Behaviors>

    <Page.Resources>
        <converter:AmountFormatConverter x:Key="AmountFormatConverter" />
        <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converter:ClickConverter x:Key="ClickConverter" />

        <DataTemplate x:Key="AccountItemTemplate" x:DataType="viewModels:AccountViewModel">

            <uwpToolkit:DropShadowPanel ShadowOpacity="0.40">
                <StackPanel Width="400">
                    <StackPanel.ContextFlyout>
                        <MenuFlyout>
                            <MenuFlyoutItem
                                Click="Edit_OnClick"
                                Icon="Edit"
                                Text="{x:Bind resources:Strings.EditLabel}" />
                            <MenuFlyoutItem
                                Click="Delete_OnClick"
                                Icon="Delete"
                                Text="{x:Bind resources:Strings.DeleteLabel}" />
                        </MenuFlyout>
                    </StackPanel.ContextFlyout>

                    <StackPanel Padding="{StaticResource SmallListItemPadding}" Background="{ThemeResource ListItemBrush}">
                        <TextBlock
                            Style="{ThemeResource CustomSubtitleTextBlockStyle}"
                            Text="{x:Bind Name}"
                            TextTrimming="CharacterEllipsis" />

                        <Grid>
                            <TextBlock Text="{x:Bind resources:Strings.CurrentBalanceLabel}" />
                            <TextBlock Text="{x:Bind CurrentBalance, Converter={StaticResource AmountFormatConverter}}" TextAlignment="Right" />
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </uwpToolkit:DropShadowPanel>
        </DataTemplate>

    </Page.Resources>

    <Grid EntranceNavigationTransitionInfo.IsTargetElement="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <controls:BalanceControl
            Grid.Row="0"
            Margin="{StaticResource MediumLeftRightMargin}"
            DataContext="{Binding BalanceViewModel}" />

        <ListView
            Grid.Row="1"
            Margin="{StaticResource MediumLeftRightMargin}"
            IsEnabled="True"
            IsTapEnabled="False"
            ItemsSource="{Binding Accounts}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Style="{ThemeResource HeaderStyle}" Text="{Binding Key}" />

                        <GridView
                            x:Name="AccountGrid"
                            IsItemClickEnabled="True"
                            IsSynchronizedWithCurrentItem="False"
                            ItemClick="AccountClicked"
                            ItemTemplate="{StaticResource AccountItemTemplate}"
                            ItemsSource="{Binding}" />
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <TextBlock
            Grid.Row="1"
            Margin="6"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Style="{ThemeResource DeemphasizedBodyTextBlockStyle}"
            Text="{x:Bind resources:Strings.NoAccountsMessage}"
            TextWrapping="Wrap"
            Visibility="{Binding HasNoAccounts, Converter={StaticResource BooleanToVisibilityConverter}}" />

        <CommandBar
            Grid.Row="2"
            DataContext="{Binding ViewActionViewModel}"
            Style="{ThemeResource DefaultCommandBar}">
            <CommandBar.PrimaryCommands>
                <AppBarButton
                    Command="{Binding GoToAddIncomeCommand}"
                    Icon="Add"
                    IsEnabled="{Binding IsAddIncomeAvailable}"
                    Label="{x:Bind resources:Strings.AddIncomeLabel}" />
                <AppBarButton
                    Command="{Binding GoToAddExpenseCommand}"
                    Icon="Remove"
                    IsEnabled="{Binding IsAddExpenseAvailable}"
                    Label="{x:Bind resources:Strings.AddExpenseLabel}" />
                <AppBarButton
                    Command="{Binding GoToAddTransferCommand}"
                    Icon="Switch"
                    IsEnabled="{Binding IsTransferAvailable}"
                    Label="{x:Bind resources:Strings.AddTransferLabel}" />
            </CommandBar.PrimaryCommands>
            <CommandBar.SecondaryCommands>
                <AppBarButton
                    Command="{Binding GoToAddAccountCommand}"
                    Icon="Add"
                    Label="{x:Bind resources:Strings.AddAccountLabel}" />
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Grid>
</views:BaseView>